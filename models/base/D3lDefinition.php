<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3labels\models\base;

use d3yii2\d3labels\models\SysModels;
use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;
use yii\db\Exception;

/**
 * This is the base-model class for table "d3l_definition".
 *
 * @property integer $id
 * @property integer $sys_company_id
 * @property string $code
 * @property integer $model_id
 * @property string $label
 * @property string $collor
 * @property string $icon
 * @property string $action_class
 * @property string $action_method
 *
 * @property \d3yii2\d3labels\models\D3LabelHistory[] $d3LabelHistories
 * @property SysModels $model
 * @property \d3yii2\d3labels\models\D3lLabel[] $d3lLabels
 * @property \d3yii2\d3labels\models\D3lTimeBomb[] $d3lTimeBombs
 * @property string $aliasModel
 */
abstract class D3lDefinition extends ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'd3l_definition';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['sys_company_id', 'model_id'], 'integer'],
            [['model_id'], 'required'],
            [['action_class'], 'string'],
            [['code', 'label', 'icon'], 'string', 'max' => 20],
            [['collor'], 'string', 'max' => 10],
            [['action_method'], 'string', 'max' => 256],
            [['model_id'], 'exist', 'skipOnError' => true, 'targetClass' => SysModels::className(), 'targetAttribute' => ['model_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3labels', 'ID'),
            'sys_company_id' => Yii::t('d3labels', 'Sys Company ID'),
            'code' => Yii::t('d3labels', 'Code'),
            'model_id' => Yii::t('d3labels', 'Model'),
            'label' => Yii::t('d3labels', 'Label'),
            'collor' => Yii::t('d3labels', 'Collor'),
            'icon' => Yii::t('d3labels', 'Icon'),
            'action_class' => Yii::t('d3labels', 'Action Class'),
            'action_method' => Yii::t('d3labels', 'Action Method'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'code' => Yii::t('d3labels', 'Code'),
            'model_id' => Yii::t('d3labels', 'Model'),
            'label' => Yii::t('d3labels', 'Label'),
            'collor' => Yii::t('d3labels', 'Collor'),
            'icon' => Yii::t('d3labels', 'Icon'),
            'action_class' => Yii::t('d3labels', 'Action Class'),
            'action_method' => Yii::t('d3labels', 'Action Method'),
        ]);
    }

    /**
     * @return ActiveQuery
     */
    public function getD3LabelHistories()
    {
        return $this->hasMany(\d3yii2\d3labels\models\D3LabelHistory::className(), ['definition_id' => 'id'])->inverseOf('definition');
    }

    /**
     * @return ActiveQuery
     */
    public function getModel()
    {
        return $this->hasOne(SysModels::className(), ['id' => 'model_id'])->inverseOf('d3lDefinitions');
    }

    /**
     * @return ActiveQuery
     */
    public function getD3lLabels()
    {
        return $this->hasMany(\d3yii2\d3labels\models\D3lLabel::className(), ['definition_id' => 'id'])->inverseOf('definition');
    }

    /**
     * @return ActiveQuery
     */
    public function getD3lTimeBombs()
    {
        return $this->hasMany(\d3yii2\d3labels\models\D3lTimeBomb::className(), ['definition_id' => 'id'])->inverseOf('definition');
    }


    /**
     * @return \d3yii2\d3labels\models\D3LabelHistory
     * @throws Exception
     */
    public function newD3LabelHistories()
    {
        if ($this->getIsNewRecord()){
            throw new Exception('Can not create new related record for new record!');
        }
        $model = new \d3yii2\d3labels\models\D3LabelHistory();
        $model->definition_id = $this->id;
        return $model;
    }

    /**
     * @return \d3yii2\d3labels\models\D3lLabel
     * @throws Exception
     */
    public function newD3lLabels(): \d3yii2\d3labels\models\D3lLabel
    {
        if ($this->getIsNewRecord()){
            throw new Exception('Can not create new related record for new record!');
        }
        $model = new \d3yii2\d3labels\models\D3lLabel();
        $model->definition_id = $this->id;
        return $model;
    }

    /**
     * @return \d3yii2\d3labels\models\D3lTimeBomb
     * @throws Exception
     */
    public function newD3lTimeBombs(): \d3yii2\d3labels\models\D3lTimeBomb
    {
        if ($this->getIsNewRecord()){
            throw new Exception('Can not create new related record for new record!');
        }
        $model = new \d3yii2\d3labels\models\D3lTimeBomb();
        $model->definition_id = $this->id;
        return $model;
    }

}
